//package Controller;
//
//import View.AlertView;
//import database.DBconnection;
//import model.Post;
//import model.User;
//import java.sql.Connection;
//import java.sql.PreparedStatement;
//import java.sql.SQLException;
//
//public class DislikePost {
//    private final User u;
//    private final Post p;
//    private Connection connection;
//
//    public DislikePost(User u, Post p) {
//        this.u = u;
//        this.p = p;
//    }
//
//    il metodo va a rimuovere dal db l'id dell'utente che ha messo like al post e l'id al post
//    restituisce vero se l'operazione Ã¨ andata a buon fine
//public boolean isDisliked(){
//    boolean disliked;
//
//    PreparedStatement pstmt = null;
//
//    String delete = "DELETE FROM  likes WHERE User = ? AND Post = ?;";
//    try  {
//        connection = DBconnection.startConnection(connection);
//        pstmt = connection.prepareStatement(delete);
//        pstmt.setInt(1, u.getID());
//        pstmt.setInt(2, p.getID());
//
//        pstmt.executeUpdate();
//        disliked=true;
//
//    } catch (SQLException e) {
//        new AlertView("isliked", null);
//        disliked=false;
//    } finally {
//        try {
//            if (pstmt != null) {
//                pstmt.close();
//            }
//            if (connection != null) {
//                connection.close();
//            }
//        } catch (SQLException e) {
//            new AlertView(e.getMessage(), null);
//        }
//    }
//    DBconnection.closeConnection(connection);
//    return disliked;
}}
//